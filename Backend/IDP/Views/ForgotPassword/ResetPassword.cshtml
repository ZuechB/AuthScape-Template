@using Microsoft.AspNetCore.Http
@using Microsoft.AspNetCore.Authentication
@model AuthScape.IDP.ViewModels.ForgotPasword.ResetPasswordViewModel
@inject SignInManager<AuthScape.Models.Users.AppUser> SignInManager

@{ 
    ViewData["Title"] = "Forgot Password"; 
}

	<section class="ftco-section">
		<div class="container">
			<div class="row justify-content-center">
				<div class="col-md-7 col-lg-5">
					<div class="wrap">
						<div class="login-wrap p-4 p-md-5">
							<h3>Reset Password</h3>
							<div>
								Please provide your new password
							</div>
							<form asp-controller="ForgotPassword" asp-action="ResetPasswordConfirm" asp-route-returnurl="@ViewData["ReturnUrl"]" method="post" class="login100-form validate-form" role="form">

								<input type="hidden" asp-for="Email" />
								<input type="hidden" asp-for="ResetToken" />
			      				
								<div class="form-group mt-3">
			      					<input type="text" asp-for="NewPassword" placeholder="New Password" class="form-control" required>
			      				</div>
								<div class="form-group">
									<button type="submit" class="form-control btn btn-primary rounded submit px-3">Change Password</button>
								</div>
								<div asp-validation-summary="All" class="text-danger">
									@if (Model.errors != null)
									{
										foreach (var error in Model.errors)
										{
											if (error == "Invalid token.")
											{
												<div>Your email link has expired</div>
											}
											else
											{
												<div>@(error)</div>
											}
										}
									}
								</div>
							</form>

						</div>
					</div>
				</div>
			</div>
		</div>
	</section>


@section Scripts {
    @{ await Html.RenderPartialAsync("_ValidationScriptsPartial"); }
}